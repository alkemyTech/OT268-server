{
  "openapi": "3.0.0",
  "info": {
    "title": "Api Project ONG",
    "description": "This is a simple API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3002" ,
      "description": "Desarrollo"
    },
    {
      "url": "",
      "description": "ProducciÃ³n"
    }
  ],
  "basePath": "/",
  "tags": [
    {
      "name": "news",
      "description": "Operations about news."
    }
  ],
  "paths": {
    "/news/": {
      "get": {
        "security": [
          {
           "bearerAuth": [{"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjozLCJlbWFpbCI6InRlc3QyQHRlc3QuY29tIiwidXNlcl9yb2xlSWQiOjEsImlhdCI6MTY2Mzc5NjAwMSwiZXhwIjoxNjY0MDM2MDAxfQ.JTp72XWqOZ-UmA7znD7kz9Lomip3qedqbOh6CckKASA"}]
          }
        ],
        
        "tags": ["news"],
        "summary": "Return a list of existing news",
        "description": "# Service for retrieve comments by parameters with pagination\n - For the pagination, you need send offset and limit parameters.",
        "responses": {
          "200": {
            "description": "A JSON Array of comments.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorDB"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
           " bearerAuth": []
          }
        ],
        "tags": ["comments"],
        "summary": "test authorization",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreateAndUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created."
          },
          "400": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorDB"
                }
              }
            }
          }
        }
      }
    },
    "/news/{id}": {
      "get": {
        "security": [
          {
           " bearerAuth": []
          }
        ],
        "tags": ["news"],
        "summary": "Return a list of news providing an existing id.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the comment you want to see.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON Array of news.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorDB"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
           " bearerAuth": []
          }
        ],
        "tags": ["news"],
        "summary": "Update an existing news by providing the correct id.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the news that needs to be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreateAndUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "News updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorDB"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
           " bearerAuth": []
          }
        ],
        "tags": ["news"],
        "summary": "Delete an existing news by providing the correct id.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the news that needs to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News deleted."
          },
          "400": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorDB"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "token",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
  
      }
    
      },
    "schemas": {
      "News": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "role": {
            "description": "the user role",
            "type": "string",
            "example": "Default value: USER_ROLE"
          },
          "enable": {
            "description": "User is enabled?",
            "type": "boolean",
            "example": "true"
          },
          "id": {
            "description": "News id.",
            "type": "integer",
            "example": "1"
          },
          "name": {
            "description": "The news name.",
            "type": "string",
            "example": "Random"
          },
          "content": {
            "description": "News description.",
            "type": "string",
            "example": "Random"
          },
          "image": {
            "description": "News image.",
            "type": "string",
            "example": "jpg"
          },
          "categoryId": {
            "description": "News id.",
            "type": "integer",
            "example": "1"
          },
          "createdAt": {
            "description": "date of the user creation.",
            "type": "date",
            "example": "YY-MM-DD -> 1989-12-31"
          },
          "updatedAt": {
            "description": "date of the user update.",
            "type": "date",
            "example": "YY-MM-DD -> 1989-12-31"
          }
        }
      },
      "CommentCreateAndUpdate": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The news name.",
            "type": "string",
            "example": "Random example"
          },
          "content": {
            "description": "News description.",
            "type": "string",
            "example": "Random example"
          },
          "image": {
            "description": "News image.",
            "type": "string",
            "example": "jpg example"
          },
          "categoryId": {
            "description": "News news.",
            "type": "object",
            "example": "Random example"
          }
        }
      },
      "RequestError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "integer",
            "example": "400"
          },
          "message": {
            "description": "Error message",
            "type": "string",
            "example": "Validation Errors: Invalid id, invalid email, etc"
          }
        }
      },
      "ErrorDB": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "integer",
            "example": "500"
          },
          "message": {
            "description": "Error message",
            "type": "string",
            "example": "Search failed: description of the error"
          }
        }
      }
    }
  }
}